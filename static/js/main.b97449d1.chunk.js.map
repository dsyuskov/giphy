{"version":3,"sources":["serviceWorker.js","services/giphy.js","components/Search.js","components/Header.js","components/GiphyItem.js","components/GiphyContainer.js","components/Button.js","components/ContentContainer.js","components/MainLayout.js","router.js","components/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","PATH_TRENDING_GIFS","API_KEY","contentAPI","SEARCH_GIFS","SEARCH_STIKERS","TRENDING_GIFS","TRENDING_STIKERS","id","content","offset","limit","searchString","url","fetch","response","ok","Error","status","json","data","newOffset","value","map","item","title","imageUrl","getUrl","Search","props","state","search","handleChange","bind","event","this","setState","target","className","onSubmit","onClick","preventDefault","type","onChange","Component","Header","to","GiphyItem","src","alt","GiphyContainer","result","length","key","Button","initState","ContentContainer","getContent","newLimit","newSearchString","giphyService","then","newResult","prevProps","buttonIsNotVisible","pathname","withRouter","MainLayout","searchContent","history","push","children","exact","path","component","render","ReactDOM","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b97449d1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const PATH_SEARCH_GIFS = 'http://api.giphy.com/v1/gifs/search';\nconst PATH_SEARCH_STICKERS = 'http://api.giphy.com/v1/stickers/search';\nconst PATH_TRENDING_GIFS = 'http://api.giphy.com/v1/gifs/trending';\nconst PATH_TRENDING_STICKERS = 'http://api.giphy.com/v1/stickers/trending';\nconst API_KEY = 'api_key=NTrUfOQyMsagSSx8lEOU7Zx9x1eONTx1';\n\nexport const contentAPI = {\n  SEARCH_GIFS: 'search-gif',\n  SEARCH_STIKERS: 'search-stiker',\n  TRENDING_GIFS: 'trend-gif',\n  TRENDING_STIKERS: 'trend-stiker',\n}\n\nclass GiphyService {\n  getUrl(id) {\n    return `https://i.giphy.com/${id}.gif`;\n  }\n\n  async getContent(content, offset = 0, limit = 5, searchString = '') {\n\n    let url = '';\n\n    switch(content) {\n      case contentAPI.SEARCH_GIFS: {\n        url = `${PATH_SEARCH_GIFS}?${API_KEY}&limit=${limit}&offset=${offset}&q=${searchString}`;\n        break;\n      }\n      case contentAPI.SEARCH_STIKERS: {\n        url = `${PATH_SEARCH_STICKERS}?${API_KEY}&limit=${limit}&offset=${offset}&q=${searchString}`;\n        break;\n      }\n      case contentAPI.TRENDING_GIFS: {\n        url = `${PATH_TRENDING_GIFS}?${API_KEY}&limit=${limit}&offset=${offset}`;\n        break;\n      }\n      case contentAPI.TRENDING_STIKERS: {\n        url = `${PATH_TRENDING_STICKERS}?${API_KEY}&limit=${limit}&offset=${offset}`;\n        break;\n      }\n      default: {\n        url = `${PATH_TRENDING_GIFS}?${API_KEY}&limit=${limit}&offset=${offset}`;\n      }\n    }\n\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`GiphyService failed, HTTP status ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return {\n      newOffset: offset + +limit,\n      value:  data.data.map((item) => ({\n        id: item.id,\n        title: item.title,\n        imageUrl: this.getUrl(item.id),\n      })),\n    };\n  }\n}\n\nexport default new GiphyService();\n","import React, {Component} from 'react';\nimport '../scss/search.scss';\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ search: event.target.value });\n  }\n\n  render() {\n    return(\n      <form \n        className = \"search\"\n        onSubmit = { (event) => {\n          this.props.onClick(this.state.search);\n          event.preventDefault();} }>\n        <input\n          className = \"search__input\"\n          type = \"text\"\n          onChange = { this.handleChange }\n        />\n        <input\n          className = \"search__button\"\n          type = \"submit\"\n          value = \"Search\"\n        />\n      </form>\n    )\n  }\n}\n","import React from 'react';\nimport Search from '../components/Search';\nimport { Link } from 'react-router-dom';\nimport '../scss/header.scss';\n\nexport default function Header(props) {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__logo\"><Link to=\"/\">GIPHY</Link></h1>\n      <ul className=\"menu header__menu\">\n        <li className=\"menu__item menu__item--link\"><Link className=\"menu__link\" to=\"/tranding\">Tranding Gifs</Link></li>\n        <li className=\"menu__item menu__item--link\"><Link className=\"menu__link\" to=\"/animals\">Animals</Link></li>\n        <li className=\"menu__item menu__item--link\"><Link className=\"menu__link\" to=\"/memes\">Memes</Link></li>\n        <li className=\"menu__item menu__item--link\"><Link className=\"menu__link\" to=\"/sport\">Sport</Link></li>\n        <li className=\"menu__item menu__item--link\"><Link className=\"menu__link\" to=\"/stikers\">Stikers</Link></li>\n        <li className=\"menu__item\">\n          <Search\n            onClick = { props.onClick }\n          />\n        </li>\n      </ul>\n    </header>\n  )\n}\n","import React, { Component } from 'react';\nimport '../scss/giphyItem.scss';\n\nexport default class GiphyItem extends Component{\n  render() {\n    const { title, imageUrl } = this.props.item;\n    return (\n      <div className = \"giphy-item\">\n        <img src = { imageUrl } alt = { title }></img>\n      </div>\n    )\n  }\n}\n","import React, { Component}  from 'react';\nimport GiphyItem from './GiphyItem';\nimport '../scss/giphyContainer.scss';\n\nclass GiphyContainer extends Component {\n  render() {\n    const { result } = this.props;\n\n    if (result.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className= \"giphy\">\n        {result.map((item) => {\n        return (\n          <GiphyItem \n            key = { item.id }\n            item = { item }\n          />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default GiphyContainer;\n","import React from 'react';\nexport default function Button(props) {\n  return (\n    <button\n      className = { props.className }\n      onClick = { props.onClick }\n    >{ props.value }</button>\n  )\n}\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport GiphyContainer from './GiphyContainer';\nimport giphyService from '../services/giphy';\nimport Button from './Button';\nimport '../scss/contentContainer.scss';\n\nconst initState = {\n  result: null,\n  searchString: '',\n  limit: 5,\n  offset: 0\n}\n\nclass ContentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initState }\n    this.getContent = this.getContent.bind(this);\n  }\n\n  getContent(content, newOffset = this.state.offset, newLimit = this.state.limit, newSearchString = this.state.searchString) {\n    const { result } = this.state;\n    \n    giphyService.getContent(content, newOffset, newLimit, newSearchString)\n      .then((item) => {\n        const newResult = (result === null || newOffset === 0 || newSearchString !== this.state.search) ? [...item.value] : [...result, ...item.value];\n        this.setState( {result: newResult, offset: item.newOffset, searchString: newSearchString} )\n      });\n  }\n\n  componentDidMount() {\n    this.setState({ limit: this.props.limit, content: this.props.content, search: this.props.searchString })\n    this.getContent(this.props.content, 0, this.props.limit, this.props.searchString);\n  }\n  \n  componentDidUpdate(prevProps) {\n    if ( prevProps.limit !== this.props.limit ||\n         prevProps.content !== this.props.content || this.props.searchString !== prevProps.searchString) {\n          this.setState({ limit: this.props.limit, content: this.props.content, search: this.props.searchString })\n          this.getContent(this.props.content, 0, this.props.limit, this.props.searchString);\n    }\n  }\n\n  render() {\n    const { result } = this.state;\n    const { location, title } = this.props;\n\n    if (!result) {\n      return null;\n    }\n\n    let buttonIsNotVisible = '';\n\n     if ( location.pathname === '/') {\n      buttonIsNotVisible = ' isNotVisible';\n     }\n\n    return (\n      <div className = \"content-container\">\n        <h2 className = \"content-container__title\">{ title }</h2>\n        <GiphyContainer\n          result = { result }\n        />\n        <Button\n          className = { \"content-container__button\" + buttonIsNotVisible }\n          value = \"Load more\"\n          onClick = { () => this.getContent(this.props.content) }\n        />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ContentContainer);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { contentAPI }   from '../services/giphy';\nimport ContentContainer from './ContentContainer';\n\nclass MainLayout extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { searchString: '' }\n    this.searchContent = this.searchContent.bind(this);\n  }\n\n  searchContent(searchString) {\n    this.props.history.push('/search');\n    this.setState({ searchString: searchString });\n  }\n\n  render() {\n    const { pathname } = this.props.location;\n\n    if (pathname !== '/search') {\n      return (\n        <div className=\"app\">\n          <Header\n            onClick = { (searchString) => this.searchContent(searchString) }\n          />\n          <main className=\"main\">\n            {this.props.children}\n          </main>\n        </div>\n      ) \n    } else {\n      return (\n        <div className=\"app\">\n          <Header\n            onClick = { (searchString) => this.searchContent(searchString) }\n          />\n          <main className=\"main\">\n            <ContentContainer\n              title = \"Search result\"\n              limit = \"20\"\n              content = { contentAPI.SEARCH_GIFS }\n              searchString = { this.state.searchString }\n            />\n          </main>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(MainLayout);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport {contentAPI} from './services/giphy';\n\nimport MainLayout from './components/MainLayout'\nimport Home from './components/Home';\nimport ContentContainer from './components/ContentContainer';\n\nexport default(\n  <HashRouter>\n    <MainLayout>\n      <Switch>\n        <Route\n          exact path = \"/\"\n          component = { Home } \n        />\n        <Route\n          path = \"/tranding\"\n          render = { (props) => (\n            <ContentContainer \n              title = \"Trending gifs\"\n              limit = \"20\"\n              content = { contentAPI.TRENDING_GIFS }\n              searchString = \"\"\n            />)}\n        />\n        <Route\n          path = \"/animals\"\n          render = { (props) => (\n            <ContentContainer \n              title = \"Animals gifs\"\n              limit = \"20\"\n              content = { contentAPI.SEARCH_GIFS }\n              searchString = \"animals\"\n            />)}\n        />\n        <Route\n          path = \"/memes\"\n          render = { (props) => (\n            <ContentContainer\n              title = \"Memes gifs\"\n              limit = \"20\"\n              content = { contentAPI.SEARCH_GIFS }\n              searchString = \"memes\"\n            />)}\n        />\n        <Route\n          path = \"/sport\"\n          render = { (props) => (\n            <ContentContainer\n              title = \"Sport gifs\"\n              limit = \"20\"\n              content = { contentAPI.SEARCH_GIFS }\n              searchString = \"sport\"\n            />)}\n        />\n        <Route\n          path = \"/stikers\"\n          render = { (props) => (\n            <ContentContainer\n              title = \"Trending stikers\"\n              limit = \"20\"\n              content = { contentAPI.TRENDING_STIKERS }\n              searchString = \"\"\n            />)}\n        />\n      </Switch>\n    </MainLayout>\n  </HashRouter>\n)\n","import React from 'react';\nimport ContentContainer from './ContentContainer';\nimport { contentAPI } from '../services/giphy';\n\nexport default function Home(props) {\n  return (\n    <div className = \"main-wrapper\">\n      <ContentContainer \n        title = 'Trending gifs'\n        limit = '5'\n        content = { contentAPI.TRENDING_GIFS }\n        searchString = ''\n      />\n      <ContentContainer\n        title = 'Animals gifs'\n        limit = '5'\n        content = { contentAPI.SEARCH_GIFS }\n        searchString = 'animals'\n      />\n      <ContentContainer\n        title = 'Memes gifs'\n        limit = '5'\n        content = { contentAPI.SEARCH_GIFS }\n        searchString = 'memes'\n      />\n      <ContentContainer\n        title = 'Sport gifs'\n        limit = '5'\n        content = { contentAPI.SEARCH_GIFS }\n        searchString = 'sport'\n      />\n      <ContentContainer\n        title = 'Trending stikers'\n        limit = '5'\n        content = { contentAPI.TRENDING_STIKERS }\n        searchString = ''\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router';\nimport './scss/main.scss';\n\nReactDOM.render(Router, document.getElementById('root'));\n\nserviceWorker.unregister();\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}